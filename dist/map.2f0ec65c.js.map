{"version":3,"sources":["plugin/map/main.js","plugin/map/index.js"],"names":["map","params","init","myChart","echarts","document","getElementById","option","bmap","tooltip","trigger","visualMap","min","max","left","top","text","calculable","toolbox","show","orient","feature","mark","dataView","readOnly","restore","saveAsImage","series","type","mapType","roam","label","normal","emphasis","data","name","value","Math","round","random","setOption","getModel","getComponent","getBMap","provList","Array","centerAndZoom","BMap","Point","addControl","NavigationControl","ScaleControl","MapTypeControl","mapTypes","BMAP_NORMAL_MAP","BMAP_SATELLITE_MAP","BMAP_HYBRID_MAP","enableScrollWheelZoom","getBoundary","provItem","bdary","Boundary","get","rs","count","boundaries","length","pointArray","i","ply","Polygon","strokeWeight","strokeColor","fillColor","addOverlay","concat","getPath","setTimeout","forEach","item","global","factory","module","exports","w","Error","window","noGlobal","main"],"mappings":"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","file":"map.2f0ec65c.js","sourceRoot":"..\\src","sourcesContent":["export default class map {\r\n     constructor(params){\r\n       //初始化\r\n       this.init();\r\n     }\r\n\r\n     init(){ \r\n        //echarts\r\n        var myChart = echarts.init(document.getElementById('main'));\r\n        var option = {\r\n          bmap: {},\r\n          tooltip : {\r\n            trigger: 'item'\r\n         },\r\n          visualMap: {\r\n            min: 0,\r\n            max: 100,\r\n            left: 'left',\r\n            top: 'bottom',\r\n            text:['高','低'],           // 文本，默认为数值文本\r\n            calculable : true\r\n         },\r\n         toolbox: {\r\n            show: true,\r\n            orient : 'vertical',\r\n            left: 'right',\r\n            top: 'center',\r\n            feature : {\r\n                mark : {show: true},\r\n                dataView : {show: true, readOnly: false},\r\n                restore : {show: true},\r\n                saveAsImage : {show: true}\r\n            }\r\n          },\r\n          series : [\r\n            {\r\n                type: 'map',\r\n                mapType: 'china',\r\n                roam: false,\r\n                label: {\r\n                    normal: {\r\n                        show: false\r\n                    },\r\n                    emphasis: {\r\n                        show: true\r\n                    }\r\n                },\r\n                data:[\r\n                    {name: '北京',value: Math.round(Math.random()*1000)},\r\n                    {name: '天津',value: Math.round(Math.random()*1000)},\r\n                    {name: '上海',value: Math.round(Math.random()*1000)},\r\n                    {name: '重庆',value: Math.round(Math.random()*1000)},\r\n                    {name: '河北',value: Math.round(Math.random()*1000)},\r\n                    {name: '河南',value: Math.round(Math.random()*1000)},\r\n                    {name: '云南',value: Math.round(Math.random()*1000)},\r\n                    {name: '辽宁',value: Math.round(Math.random()*1000)},\r\n                    {name: '黑龙江',value: Math.round(Math.random()*1000)},\r\n                    {name: '湖南',value: Math.round(Math.random()*1000)},\r\n                    {name: '安徽',value: Math.round(Math.random()*1000)},\r\n                    {name: '山东',value: Math.round(Math.random()*1000)},\r\n                    {name: '新疆',value: Math.round(Math.random()*1000)},\r\n                    {name: '江苏',value: Math.round(Math.random()*1000)},\r\n                    {name: '浙江',value: Math.round(Math.random()*1000)},\r\n                    {name: '江西',value: Math.round(Math.random()*1000)},\r\n                    {name: '湖北',value: Math.round(Math.random()*1000)},\r\n                    {name: '广西',value: Math.round(Math.random()*1000)},\r\n                    {name: '甘肃',value: Math.round(Math.random()*1000)},\r\n                    {name: '山西',value: Math.round(Math.random()*1000)},\r\n                    {name: '内蒙古',value: Math.round(Math.random()*1000)},\r\n                    {name: '陕西',value: Math.round(Math.random()*1000)},\r\n                    {name: '吉林',value: Math.round(Math.random()*1000)},\r\n                    {name: '福建',value: Math.round(Math.random()*1000)},\r\n                    {name: '贵州',value: Math.round(Math.random()*1000)},\r\n                    {name: '广东',value: Math.round(Math.random()*1000)},\r\n                    {name: '青海',value: Math.round(Math.random()*1000)},\r\n                    {name: '西藏',value: Math.round(Math.random()*1000)},\r\n                    {name: '四川',value: Math.round(Math.random()*1000)},\r\n                    {name: '宁夏',value: Math.round(Math.random()*1000)},\r\n                    {name: '海南',value: Math.round(Math.random()*1000)},\r\n                    {name: '台湾',value: Math.round(Math.random()*1000)},\r\n                    {name: '香港',value: Math.round(Math.random()*1000)},\r\n                    {name: '澳门',value: Math.round(Math.random()*1000)}\r\n                ]\r\n            },\r\n          ]\r\n        }\r\n        myChart.setOption(option);\r\n        //地图\r\n        var map = myChart.getModel().getComponent('bmap').getBMap();\r\n        let provList = new Array([\"黑龙江\",\"#F09ABD\"],[\"吉林省\",\"#01933F\"],[\"辽宁\",\"#FAC300\"],[\"内蒙古\",\"#FCF502\"],[\"河北\",\"#F09ABD\"],[\"北京\",\"#FCF502\"],[\"天津\",\"#01933F\"],[\"山东省\",\"#FCF502\"],[\"江苏\",\"#D8EDDA\"],[\"上海\",\"#B9B4C8\"],[\"浙江\",\"#FCF502\"],[\"福建\",\"#FAC300\"],[\"台湾\",\"#F09ABD\"],[\"广东\",\"#FCF502\"],[\"香港\",\"#F09ABD\"],[\"澳门\",\"#F09ABD\"],[\"海南\",\"#F09ABD\"],[\"广西\",\"#FAC300\"],[\"云南\",\"#FCF502\"],[\"西藏\",\"#B9B4C8\"],[\"新疆\",\"#FAC300\"],[\"甘肃\",\"#01933F\"],[\"青海\",\"#F09ABD\"],[\"四川\",\"#FAC300\"],[\"贵州\",\"#01933F\"],[\"重庆\",\"#B9B4C8\"],[\"湖南\",\"#F09ABD\"],[\"江西\",\"#01933F\"],[\"湖北\",\"#FCF502\"],[\"安徽\",\"#FAC300\"],[\"河南\",\"#B9B4C8\"],[\"陕西\",\"#F09ABD\"],[\"山西\",\"#01933F\"],[\"宁夏\",\"#FAC300\"]); //通过取色器获取各省颜色\r\n        map.centerAndZoom(new BMap.Point(116.404, 39.915), 11); //取北京作为中心点\r\n        map.addControl(new BMap.NavigationControl()); // 缩放控件\r\n        map.addControl(new BMap.ScaleControl()); // 比例尺\r\n        map.addControl(new BMap.MapTypeControl({\r\n          mapTypes:[BMAP_NORMAL_MAP, BMAP_SATELLITE_MAP, BMAP_HYBRID_MAP]\r\n      }));\r\n        map.enableScrollWheelZoom();\r\n        function getBoundary(provItem){    \r\n          var bdary = new BMap.Boundary();\r\n          bdary.get(provItem[0], function(rs){       //获取行政区域\r\n            var count = rs.boundaries.length; //行政区域的点有多少个\r\n            // if (count === 0) {\r\n            //     alert('未能获取当前输入行政区域');\r\n            //     return ;\r\n            // }\r\n            var pointArray = [];\r\n            for (var i = 0; i < count; i++) {\r\n                let ply = new BMap.Polygon(rs.boundaries[i], {strokeWeight: 1, strokeColor: \"#aaaaaa\", fillColor: provItem[1]}); //建立多边形覆盖物\r\n                map.addOverlay(ply);  //添加覆盖物\r\n                pointArray = pointArray.concat(ply.getPath());      \r\n            }    \r\n          });   \r\n        }\r\n\r\n        setTimeout(function(){\r\n          provList.forEach(function(item){\r\n            getBoundary(item);\r\n          });\r\n        }, 500);\r\n     }\r\n    \r\n     render(){\r\n        \r\n     }\r\n}","import main from './main'\r\n; (function (global, factory) {\r\n    \"use strict\";\r\n  \r\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n      module.exports = global.document ?\r\n        factory(global, true) :\r\n        function (w) {\r\n          if (!w.document) {\r\n            throw new Error(\"draw-editer requires a window with a document\");\r\n          }\r\n          return factory(w);\r\n        };\r\n    } else {\r\n      factory(global);\r\n    }\r\n  }(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\r\n    window.map = main;\r\n    \r\n  }))"]}