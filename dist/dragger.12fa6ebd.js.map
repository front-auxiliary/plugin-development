{"version":3,"sources":["plugin/dragger/index.js"],"names":["Drag","obj","id","initParameter","canRotate","undefined","canZoom","canPull","canMove","showBorder","showAngle","showPosition","isScale","container","document","getElementById","body","targetObj","initPos","initPannel","initEvent","pannelDom","querySelector","createElement","appendChild","innerHTML","initPannelDom","throttle","fn","interval","canRun","setTimeout","apply","arguments","that","addEventListener","e","preventDefault","moveChange","moveLeave","onmousedown","stopPropagation","moveInit","style","left","top","width","height","transform","angle","rotatePoint","className","angleDom","display","i","baseLine","zoomPoint","pullPoint","positionDom","offsetLeft","offsetTop","offsetWidth","offsetHeight","getRotate","rightBottomPoint","x","y","rightTopPoint","leftTopPoint","leftBottomPoint","leftMiddlePoint","rightMiddlePoint","topMiddlePoint","bottomMiddlePoint","centerPos","type","target","Number","mouseInit","Math","floor","clientX","clientY","scale","initAngle","initRightBottomPoint","initRightTopPoint","initLeftTopPoint","initLeftBottomPoint","initLeftMiddlePoint","initRightMiddlePoint","initTopMiddlePoint","initBottomMiddlePoint","initCenterPos","initPosition","rotateFlag","preRadian","atan2","canChange","newHeight","newWidth","newRightBottomPoint","newLeftTopPoint","newLeftBottomPoint","newRightTopPoint","rotateCurrentPos","rotateCurrent","curRadian","tranformRadian","round","PI","disAngle","getRotatedPoint","abs","rotateLeftTopPoint","rotatedLeftBottomPoint","rotatedRightTopPoint","rotatedRightBottomPoint","rotatedTopMiddlePoint","rotatedLeftMiddlePonit","rotatedBottomMiddlePoint","rotatedRightMiddlePoint","dis","getTransferPosition","st","window","getComputedStyle","tr","getPropertyValue","values","split","a","b","c","d","sqrt","sin","curPos","cos","center","a1","a2","a3","a4","a5","a6","a7","a8"],"mappings":"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","file":"dragger.12fa6ebd.js","sourceRoot":"../src","sourcesContent":["/*\n * @Description: dragger\n * @Author: zy\n * @LastEditors: zy\n * @Date: 2019-04-04 16:35:59\n * @LastEditTime: 2019-04-18 15:01:43\n */\n/**\n * @description: 拖拽类\n * @param {\n    *  canRotate: true, 可旋转\n    *  canZoom: true, 可缩放\n    *  canPull: true, 可拉升\n    *  canMove: true, 可平移\n    *  showAngle: false, 展示角度\n    *  showPosition: false, 展示位置\n    *  isScale: true 是否等比例缩放\n    * } \n    * @return:  \n    */\n   export default class Drag {\n     constructor (obj) {\n       this.id = obj.id\n       this.initParameter(obj)\n     }\n     /**\n      * @description: 初始化参数 \n      * @param {type} \n      * @return: \n      */\n     initParameter (obj) {\n       this.canRotate = obj.canRotate === undefined ? true : obj.canRotate\n       this.canZoom = obj.canZoom === undefined ? true : obj.canZoom\n       this.canPull = obj.canPull === undefined ? true : obj.canPull\n       this.canMove = obj.canMove === undefined ? true : obj.canMove\n       this.showBorder = obj.showBorder === undefined ? true : obj.showBorder\n       this.showAngle = obj.showAngle\n       this.showPosition = obj.showPosition\n       this.isScale = obj.isScale === undefined ? true : obj.isScale\n       this.container = obj.container ? document.getElementById(obj.container) : document.body\n       this.targetObj = document.getElementById(obj.id)\n       this.initPos()\n       this.initPannel()\n       this.initEvent()\n     }\n     /**\n      * @description: 判断是否有pannel面板\n      * @param {type} \n      * @return: \n      */\n     initPannel () {\n       this.pannelDom = document.querySelector('#pannel')\n       if (!this.pannelDom) {\n         this.pannelDom = document.createElement('div')\n         this.pannelDom.id = 'pannel'\n         this.container.appendChild(this.pannelDom)\n       } else {\n         this.pannelDom.innerHTML = ''\n       }\n       this.initPannelDom()\n     }\n     /**\n      * @description: 初始化事件\n      * @param {type} \n      * @return: \n      */\n   initEvent () {\n     function throttle(fn, interval) {\n       let canRun = true;\n       return function () {\n         if (!canRun) return;\n         canRun = false;\n         setTimeout(() => {\n           fn.apply(this, arguments);\n           canRun = true;\n         }, interval);\n       };\n     }\n     let that = this\n     document.addEventListener('mousemove', throttle(function (e) {\n       e.preventDefault && e.preventDefault()\n       that.moveChange(e, that.targetObj)\n     }, 10))\n     document.addEventListener('mouseup', e => {\n       this.moveLeave(this.targetObj)\n     })\n     // this.container.addEventListener('mousedown', e => {\n     //   this.mergeBox.flag = true\n     //   this.initPannel()\n     //   this.mergeBox.initPos = {\n     //     x: Math.floor(e.clientX),\n     //     y: Math.floor(e.clientY)\n     //   }\n     //   this.container.addEventListener('mousemove', e => {\n     //     if (this.mergeBox.flag) {\n     //       this.mergeBox.left = this.mergeBox.initPos.x\n     //       this.mergeBox.top = this.mergeBox.initPos.y\n     //       this.pannelDom.style.left = `${this.mergeBox.initPos.x}px`\n     //       this.pannelDom.style.top = `${this.mergeBox.initPos.y}px`\n     //       this.pannelDom.style.width = `${Math.floor(e.clientX) - this.mergeBox.initPos.x}px`\n     //       this.pannelDom.style.height = `${Math.floor(e.clientY) - this.mergeBox.initPos.y}px`\n     //     }\n     //   })\n     // })\n     if (this.canMove) {\n       // 外层给this.pannelDom添加mousedown事件，是在所有实例化结束后，panneldom被展示在最后一个实例化对象上，鼠标按下它时，触发moveInit事件\n       this.pannelDom.onmousedown = e => {\n         e.stopPropagation()\n         this.moveInit(9, e, this.targetObj)\n       }\n       this.targetObj.onmousedown = e => {\n         e.stopPropagation()\n         this.moveInit(9, e, this.targetObj)\n         this.initPannel()\n         // 在点击其他未被选中元素时，pannel定位到该元素上，重写pannelDom事件，因为此时的this.pannelDom已经根据新的目标元素被重写\n         this.pannelDom.onmousedown= e => {\n           this.moveInit(9, e, this.targetObj)\n         }\n       }\n     }\n   }\n     /**\n      * @description: 初始化Pannel内部dom结构\n      * @param {} \n      * @return: null\n      */\n     initPannelDom () {\n       this.pannelDom.style.left = `${this.left}px`\n       this.pannelDom.style.top = `${this.top}px`\n       this.pannelDom.style.width = `${this.width}px`\n       this.pannelDom.style.height = `${this.height}px`\n       this.pannelDom.style.transform = `rotate(${this.angle}deg)`\n       if (this.canRotate) {\n         let rotatePoint = document.createElement('span')\n         rotatePoint.className = `${this.id}-dragger-rotate-point dragger-rotate-point`\n         if (this.showAngle) {\n           this.angleDom = document.createElement('span')\n           this.angleDom.className = `dragger-rotate-angle ${this.id}-dragger-rotate-angle`\n           this.angleDom.style.display = 'none'\n           this.pannelDom.appendChild(this.angleDom)\n         }\n         this.pannelDom.appendChild(rotatePoint)\n         rotatePoint.addEventListener('mousedown', e => {\n           e.stopPropagation()\n           this.moveInit(0, e, this.targetObj)\n         })\n       }\n       if (this.showBorder) {\n         for (let i = 1; i < 5; i++) {\n           let baseLine = document.createElement('span')\n           baseLine.className = `${this.id}-dragger-base-line dragger-base-line dragger-line${i}`\n           this.pannelDom.appendChild(baseLine)\n         }\n       }\n       if (this.canZoom) {\n         for (let i = 1; i < 5; i++) {\n           let zoomPoint = document.createElement('span')\n           zoomPoint.className = `${this.id}-dragger-base-piont dragger-base-piont dragger-zoom${i}`\n           this.pannelDom.appendChild(zoomPoint)\n           zoomPoint.addEventListener('mousedown', e => {\n             e.stopPropagation()\n             this.moveInit(i, e, this.targetObj)\n           })\n         }\n       }\n       if (this.canPull) {\n         for (let i = 5; i < 9; i++) {\n           let pullPoint = document.createElement('span')\n           pullPoint.className = `${this.id}-dragger-base-piont dragger-base-piont dragger-pull${i}`\n           this.pannelDom.appendChild(pullPoint)\n           pullPoint.addEventListener('mousedown', e => {\n             e.stopPropagation()\n             this.moveInit(i, e, this.targetObj)\n           })\n         }\n       }\n       if (this.canMove && this.showPosition) {\n         this.positionDom = document.createElement('span')\n         this.positionDom.className = 'dragger-position'\n         this.pannelDom.appendChild(this.positionDom)\n         this.positionDom.style.display = 'none'\n       }\n     }\n     /**\n      * @description: 初始化targetObj的位置\n      * @param {type} \n      * @return: \n      */\n     initPos () {\n       this.left = this.targetObj.offsetLeft\n       this.top = this.targetObj.offsetTop\n       this.width = this.targetObj.offsetWidth\n       this.height = this.targetObj.offsetHeight\n       this.angle = this.getRotate(this.targetObj)\n       // 记录初始盒子位置右下\n       this.rightBottomPoint = {\n         x: this.width + this.left,\n         y: this.height + this.top\n       }\n       // 记录初始盒子右上角位置\n       this.rightTopPoint = {\n         x: this.width + this.left,\n         y: this.top\n       } \n       // 记录左上角的位置\n       this.leftTopPoint = {\n         x: this.left,\n         y: this.top\n       }\n       // 左下\n       this.leftBottomPoint = {\n         x: this.left,\n         y: this.top + this.height\n       }\n       // 左中\n       this.leftMiddlePoint = {\n         x: this.left,\n         y: this.top  + this.height / 2\n       }\n       // 右中\n       this.rightMiddlePoint = {\n         x: this.left  + this.width,\n         y: this.top  + this.height / 2\n       }\n       // 上中\n       this.topMiddlePoint = {\n         x: this.left  + this.width / 2,\n         y: this.top\n       }\n       // 下中\n       this.bottomMiddlePoint= {\n         x: this.left  + this.width / 2,\n         y: this.top  + this.height\n       }\n       // 记录中心位置\n       this.centerPos = {\n         x: this.left + this.width / 2,\n         y: this.top + this.height / 2\n       }\n     }\n     moveInit (type, e, target) {\n       this.type = Number(type)\n       this.mouseInit = {\n         x: Math.floor(e.clientX),\n         y: Math.floor(e.clientY)\n       }\n       this.scale = target.offsetWidth / target.offsetHeight\n       this.initAngle = this.angle\n       this.initRightBottomPoint = this.rightBottomPoint\n       this.initRightTopPoint = this.rightTopPoint\n       this.initLeftTopPoint = this.leftTopPoint\n       this.initLeftBottomPoint = this.leftBottomPoint\n       this.initLeftMiddlePoint = this.leftMiddlePoint\n       this.initRightMiddlePoint = this.rightMiddlePoint\n       this.initTopMiddlePoint = this.topMiddlePoint\n       this.initBottomMiddlePoint = this.bottomMiddlePoint\n       this.initCenterPos = this.centerPos\n       this.initPosition = {\n         x: this.left,\n         y: this.top\n       }\n       if (type === 0) {\n         this.rotateFlag = true\n         this.preRadian = Math.atan2(this.mouseInit.y - this.centerPos.y, this.mouseInit.x - this.centerPos.x)\n       } else if (type < 10) {\n         this.canChange = true\n       }\n     }\n     moveChange (e, target) {\n       let newHeight, newWidth, newRightBottomPoint, newLeftTopPoint, newLeftBottomPoint, newRightTopPoint, rotateCurrentPos\n       switch (this.type) {\n         case 0:\n           if (this.rotateFlag) {\n             this.rotateCurrent = {\n               x: Math.floor(e.clientX),\n               y: Math.floor(e.clientY)\n             }\n             this.curRadian = Math.atan2(this.rotateCurrent.y - this.centerPos.y, this.rotateCurrent.x - this.centerPos.x)\n             this.tranformRadian = this.curRadian - this.preRadian\n             this.angle = this.getRotate(target) +  Math.round(this.tranformRadian * 180 / Math.PI)\n             target.style.transform = `rotate(${this.angle}deg)`\n             this.pannelDom.style.transform = `rotate(${this.angle}deg)`\n             if (this.showAngle) {\n               this.angleDom.innerHTML = this.angle\n               this.angleDom.style.display = 'block'\n             }\n             this.preRadian = this.curRadian\n             // 重新计算旋转后四个点的坐标变化\n             let disAngle = this.angle - this.initAngle\n             this.rightBottomPoint = this.getRotatedPoint(this.initRightBottomPoint, this.centerPos, disAngle)\n             this.rightTopPoint = this.getRotatedPoint(this.initRightTopPoint, this.centerPos, disAngle)\n             this.leftTopPoint = this.getRotatedPoint(this.initLeftTopPoint, this.centerPos, disAngle)\n             this.leftBottomPoint = this.getRotatedPoint(this.initLeftBottomPoint, this.centerPos, disAngle)\n             this.leftMiddlePoint = this.getRotatedPoint(this.initLeftMiddlePoint, this.centerPos, disAngle)\n             this.rightMiddlePoint = this.getRotatedPoint(this.initRightMiddlePoint, this.centerPos, disAngle)\n             this.topMiddlePoint = this.getRotatedPoint(this.initTopMiddlePoint, this.centerPos, disAngle)\n             this.bottomMiddlePoint = this.getRotatedPoint(this.initBottomMiddlePoint, this.centerPos, disAngle)\n           }\n         case 1:\n           if (this.canChange) {\n             this.centerPos = {\n               x: Math.floor((e.clientX + this.rightBottomPoint.x) / 2),\n               y: Math.floor((e.clientY + this.rightMiddlePoint.y) / 2)\n             }\n             // 计算旋转为水平角度的两点坐标\n             newLeftTopPoint = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.centerPos, -this.initAngle)\n             newRightBottomPoint = this.getRotatedPoint(this.rightBottomPoint, this.centerPos, -this.initAngle)\n             newWidth = newRightBottomPoint.x - newLeftTopPoint.x\n             newHeight = newRightBottomPoint.y - newLeftTopPoint.y\n             if (this.isScale) {\n               if (newWidth / newHeight > this.scale) {\n                 newLeftTopPoint.x = newLeftTopPoint.x + Math.abs(newWidth - newHeight * this.scale)\n                 newWidth = newHeight * this.scale\n               } else {\n                 newLeftTopPoint.y = newLeftTopPoint.y + Math.abs(newHeight - newWidth / this.scale)\n                 newHeight = newWidth / this.scale\n               }\n               // 计算出左上角等比角度变换后水平坐标后，再计算旋转后的角度\n               var rotateLeftTopPoint = this.getRotatedPoint(newLeftTopPoint, this.centerPos, this.initAngle)\n               this.centerPos = {\n                 x: Math.floor((rotateLeftTopPoint.x + this.rightBottomPoint.x) / 2),\n                 y: Math.floor((rotateLeftTopPoint.y + this.rightBottomPoint.y) / 2)\n               }\n               newLeftTopPoint = this.getRotatedPoint(rotateLeftTopPoint, this.centerPos, -this.initAngle)\n               newRightBottomPoint = this.getRotatedPoint(this.rightBottomPoint, this.centerPos, -this.initAngle)\n               newWidth = newRightBottomPoint.x - newLeftTopPoint.x\n               newHeight = newRightBottomPoint.y - newLeftTopPoint.y\n             }\n             if (newWidth <= 12) {\n               newWidth = 12\n               newHeight = Math.floor(newWidth / this.scale)\n               newLeftTopPoint.x = newRightBottomPoint.x - newWidth\n               newLeftTopPoint.y = newRightBottomPoint.y - newHeight\n             }\n             if (newHeight <= 12) {\n               newHeight = 12\n               newWidth = Math.floor(newHeight * this.scale)\n               newLeftTopPoint.y = newRightBottomPoint.y - newHeight\n               newLeftTopPoint.x = newRightBottomPoint.x - newWidth\n             }\n             if (newHeight > 12 && newWidth > 12) {\n               this.left = newLeftTopPoint.x\n               this.top = newLeftTopPoint.y\n               this.width = newWidth\n               this.height = newHeight\n               target.style.left = `${this.left}px`\n               target.style.top = `${this.top}px`\n               target.style.width = `${this.width}px`\n               target.style.height = `${this.height}px`\n               this.pannelDom.style.left = `${this.left}px`\n               this.pannelDom.style.top = `${this.top}px`\n               this.pannelDom.style.width = `${this.width}px`\n               this.pannelDom.style.height = `${this.height}px`\n             } \n           }\n           break;\n         case 2:\n           if (this.canChange) {\n             this.centerPos = {\n               x: Math.floor((e.clientX + this.rightTopPoint.x) / 2),\n               y: Math.floor((e.clientY + this.rightTopPoint.y) / 2)\n             }\n             newLeftBottomPoint =  this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.centerPos, -this.initAngle)\n             newRightTopPoint = this.getRotatedPoint(this.rightTopPoint, this.centerPos, -this.initAngle)\n             newWidth = newRightTopPoint.x - newLeftBottomPoint.x\n             newHeight = newLeftBottomPoint.y - newRightTopPoint.y\n             if (this.isScale) {\n               if (newWidth / newHeight > this.scale) {\n                 newLeftBottomPoint.x = newLeftBottomPoint.x + Math.abs(newWidth - newHeight * this.scale)\n                 newWidth = newHeight * this.scale\n               } else {\n                 newLeftBottomPoint.y = newLeftBottomPoint.y - Math.abs(newHeight - newWidth / this.scale)\n                 newHeight = newWidth / this.scale\n               }\n               var rotatedLeftBottomPoint = this.getRotatedPoint(newLeftBottomPoint, this.centerPos, this.initAngle)\n               this.centerPos = {\n                 x: Math.floor((rotatedLeftBottomPoint.x + this.rightTopPoint.x) / 2),\n                 y: Math.floor((rotatedLeftBottomPoint.y + this.rightTopPoint.y) / 2)\n               }\n               newLeftBottomPoint = this.getRotatedPoint(rotatedLeftBottomPoint, this.centerPos, -this.initAngle)\n               newRightTopPoint = this.getRotatedPoint(this.rightTopPoint, this.centerPos, -this.initAngle)\n               newWidth = newRightTopPoint.x - newLeftBottomPoint.x\n               newHeight = newLeftBottomPoint.y - newRightTopPoint.y\n             }\n             if (newHeight <= 12) {\n               newHeight = 12\n               newWidth = Math.floor(newHeight * this.scale)\n               newLeftBottomPoint = {\n                 x: newRightTopPoint.x - newWidth,\n                 y: newRightTopPoint.y + newHeight\n               }\n             }\n             if (newWidth <= 12) {\n               newWidth = 12\n               newHeight = Math.floor(newWidth / this.scale)\n               newLeftBottomPoint = {\n                 x: newRightTopPoint.x - newWidth,\n                 y: newRightTopPoint.y + newHeight\n               }\n             }\n             if (newHeight > 12 && newHeight > 12) {\n               this.left = newLeftBottomPoint.x\n               this.top = newRightTopPoint.y\n               this.width = newWidth\n               this.height = newHeight\n               target.style.left = `${this.left}px`\n               target.style.top = `${this.top}px`\n               target.style.width = `${this.width}px`\n               target.style.height = `${this.height}px`\n               this.pannelDom.style.left = `${this.left}px`\n               this.pannelDom.style.top = `${this.top}px`\n               this.pannelDom.style.width = `${this.width}px`\n               this.pannelDom.style.height = `${this.height}px`\n             }\n           }\n           break;\n         case 3:\n           if (this.canChange) {\n             this.centerPos = {\n               x: Math.floor((e.clientX + this.leftBottomPoint.x) / 2),\n               y: Math.floor((e.clientY + this.leftBottomPoint.y) / 2)\n             }\n             newRightTopPoint = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.centerPos, -this.initAngle)\n             newLeftBottomPoint = this.getRotatedPoint(this.leftBottomPoint, this.centerPos, -this.initAngle)\n             newWidth = newRightTopPoint.x - newLeftBottomPoint.x\n             newHeight = newLeftBottomPoint.y - newRightTopPoint.y\n             if (this.isScale) {\n               if (newWidth / newHeight > this.scale) {\n                 newRightTopPoint.x = newRightTopPoint.x - Math.abs(newWidth - newHeight * this.scale)\n                 newWidth = newHeight * this.scale\n               } else {\n                 newRightTopPoint.y = newRightTopPoint.y + Math.abs(newHeight - newWidth / this.scale)\n                 newHeight = newWidth / this.scale\n               }\n               let rotatedRightTopPoint = this.getRotatedPoint(newRightTopPoint, this.centerPos, this.initAngle)\n               this.centerPos = {\n                 x: Math.floor((rotatedRightTopPoint.x + this.leftBottomPoint.x) / 2),\n                 y: Math.floor((rotatedRightTopPoint.y + this.leftBottomPoint.y) / 2)\n               }\n               newLeftBottomPoint = this.getRotatedPoint(this.leftBottomPoint, this.centerPos, -this.initAngle)\n               newRightTopPoint = this.getRotatedPoint(rotatedRightTopPoint, this.centerPos, -this.initAngle)\n               newWidth = newRightTopPoint.x - newLeftBottomPoint.x\n               newHeight = newLeftBottomPoint.y - newRightTopPoint.y\n             }\n             if (newWidth <= 12) {\n               newWidth = 12\n               newHeight = Math.floor(newWidth / this.scale)\n               newRightTopPoint = {\n                 x: newLeftBottomPoint.x + newWidth,\n                 y: newLeftBottomPoint.y - newHeight\n               }\n             }\n             if (newHeight <= 12) {\n               newHeight = 12\n               newWidth = Math.floor(newHeight * this.scale)\n               newRightTopPoint = {\n                 x: newLeftBottomPoint.x + newWidth,\n                 y: newLeftBottomPoint.y - newHeight\n               }\n             }\n             if (newWidth > 12 && newHeight > 12) {\n               this.left = newLeftBottomPoint.x\n               this.top = newRightTopPoint.y\n               this.width = newWidth\n               this.height = newHeight\n               target.style.left = `${this.left}px`\n               target.style.top = `${this.top}px`\n               target.style.width = `${this.width}px`\n               target.style.height = `${this.height}px`\n               this.pannelDom.style.left = `${this.left}px`\n               this.pannelDom.style.top = `${this.top}px`\n               this.pannelDom.style.width = `${this.width}px`\n               this.pannelDom.style.height = `${this.height}px`\n             }\n           }\n           break;\n         case 4:\n           if (this.canChange) {\n             this.centerPos = {\n               x: Math.floor((e.clientX + this.leftTopPoint.x) / 2),\n               y: Math.floor((e.clientY + this.leftTopPoint.y) / 2)\n             }\n             newRightBottomPoint = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.centerPos, -this.initAngle)\n             newLeftTopPoint = this.getRotatedPoint(this.leftTopPoint, this.centerPos, -this.initAngle)\n             newWidth = newRightBottomPoint.x - newLeftTopPoint.x\n             newHeight = newRightBottomPoint.y - newLeftTopPoint.y\n             if (this.isScale) {\n               if (newWidth / newHeight > this.scale) {\n                 newRightBottomPoint.x = newRightBottomPoint.x - Math.abs(newWidth - newHeight * this.scale)\n                 newWidth = newHeight * this.scale\n               } else {\n                 newRightBottomPoint.y = newRightBottomPoint.y - Math.abs(newHeight - newWidth / this.scale)\n                 newHeight = newWidth / this.scale\n               }\n               let rotatedRightBottomPoint = this.getRotatedPoint(newRightBottomPoint, this.centerPos, this.initAngle)\n               this.centerPos = {\n                 x: Math.floor((rotatedRightBottomPoint.x + this.leftTopPoint.x) / 2),\n                 y: Math.floor((rotatedRightBottomPoint.y + this.leftTopPoint.y) / 2)\n               }\n               newLeftTopPoint = this.getRotatedPoint(this.leftTopPoint, this.centerPos, -this.initAngle)\n               newRightBottomPoint = this.getRotatedPoint(rotatedRightBottomPoint, this.centerPos, -this.initAngle)\n               newWidth = newRightBottomPoint.x - newLeftTopPoint.x\n               newHeight = newRightBottomPoint.y - newLeftTopPoint.y\n             }\n             if (newWidth <= 12) {\n               newWidth = 12\n               newHeight = Math.floor(newWidth / this.scale)\n               newRightBottomPoint = {\n                 x: newLeftTopPoint.x + newWidth,\n                 y: newLeftTopPoint.y + newHeight\n               }\n             }\n             if (newHeight <= 12) {\n               newHeight = 12\n               newWidth = Math.floor(newHeight * this.scale)\n               newRightBottomPoint = {\n                 x: newLeftTopPoint.x + newWidth,\n                 y: newLeftTopPoint.y + newHeight\n               }\n             }\n             if (newWidth > 12 && newHeight > 12) {\n               this.left = newLeftTopPoint.x\n               this.top = newLeftTopPoint.y\n               this.width = newWidth\n               this.height = newHeight\n               target.style.left = `${this.left}px`\n               target.style.top = `${this.top}px`\n               target.style.width = `${this.width}px`\n               target.style.height = `${this.height}px`\n               this.pannelDom.style.left = `${this.left}px`\n               this.pannelDom.style.top = `${this.top}px`\n               this.pannelDom.style.width = `${this.width}px`\n               this.pannelDom.style.height = `${this.height}px`\n             }\n           }\n           break;\n         case 5:\n           if (this.canChange) {\n             // 计算出鼠标现在所在的点，经过以bottommiddle点反向旋转后的位置,从而得到其y轴坐标点与topmiddle的x轴坐标结合，求出旋转后图形的topmiddle\n             rotateCurrentPos = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.bottomMiddlePoint, -this.initAngle)\n             let rotatedTopMiddlePoint = {\n               x: this.bottomMiddlePoint.x,\n               y: rotateCurrentPos.y\n             }\n             newHeight = this.bottomMiddlePoint.y - rotatedTopMiddlePoint.y\n   \n             // newHeight = Math.sqrt(Math.pow((this.topMiddlePoint.x - this.bottomMiddlePoint.x), 2) + Math.pow((this.topMiddlePoint.y - this.bottomMiddlePoint.y), 2))\n             if (newHeight <= 12) {\n               newHeight = 12\n               rotatedTopMiddlePoint.y = this.bottomMiddlePoint.y - 12\n             }\n             // 计算转回去的topmiddle点坐标\n             this.topMiddlePoint = this.getRotatedPoint(rotatedTopMiddlePoint, this.bottomMiddlePoint, this.initAngle)\n             this.centerPos = {\n               x: (this.topMiddlePoint.x + this.bottomMiddlePoint.x) / 2,\n               y: (this.topMiddlePoint.y + this.bottomMiddlePoint.y) / 2\n             }\n             this.left = this.centerPos.x - target.offsetWidth / 2\n             this.top = this.centerPos.y - newHeight / 2\n             this.height = newHeight\n             target.style.left = `${this.left}px`\n             target.style.height = `${this.height}px`\n             target.style.top = `${this.top}px`\n             this.pannelDom.style.left = `${this.left}px`\n             this.pannelDom.style.height = `${this.height}px`\n             this.pannelDom.style.top = `${this.top}px`\n           }\n           break;\n         case 6:\n           if (this.canChange) {\n             rotateCurrentPos = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.rightMiddlePoint, -this.initAngle)\n             let rotatedLeftMiddlePonit = {\n               x: rotateCurrentPos.x,\n               y: this.rightMiddlePoint.y\n             }\n             newWidth = this.rightMiddlePoint.x - rotatedLeftMiddlePonit.x\n             if (newWidth <= 12) {\n               newWidth = 12\n               rotatedLeftMiddlePonit.x = this.rightMiddlePoint.x - 12\n             }\n             this.leftMiddlePoint = this.getRotatedPoint(rotatedLeftMiddlePonit, this.rightMiddlePoint, this.initAngle)\n             this.centerPos = {\n               x: Math.floor((this.leftMiddlePoint.x + this.rightMiddlePoint.x) / 2),\n               y: Math.floor((this.leftMiddlePoint.y + this.rightMiddlePoint.y) / 2)\n             }\n             this.left = this.centerPos.x - newWidth / 2\n             this.top = this.centerPos.y - target.offsetHeight / 2\n             this.width = newWidth\n             target.style.left = `${this.left}px`\n             target.style.top = `${this.top}px`\n             target.style.width = `${this.width}px`\n             this.pannelDom.style.left = `${this.left}px`\n             this.pannelDom.style.top = `${this.top}px`\n             this.pannelDom.style.width = `${this.width}px`\n           }\n           break;\n         case 7:\n           if (this.canChange) {\n             rotateCurrentPos = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.topMiddlePoint, -this.initAngle)\n             let rotatedBottomMiddlePoint = {\n               x: this.topMiddlePoint.x,\n               y: rotateCurrentPos.y\n             }\n             newHeight = rotatedBottomMiddlePoint.y - this.topMiddlePoint.y\n             if (newHeight <= 12) {\n               newHeight = 12\n               rotatedBottomMiddlePoint.y = this.topMiddlePoint.y - 12\n             }\n             this.bottomMiddlePoint = this.getRotatedPoint(rotatedBottomMiddlePoint, this.topMiddlePoint, this.initAngle)\n             this.centerPos = {\n               x: Math.floor((this.bottomMiddlePoint.x + this.topMiddlePoint.x) / 2),\n               y: Math.floor((this.bottomMiddlePoint.y + this.topMiddlePoint.y) / 2)\n             }\n             this.left = this.centerPos.x - target.offsetWidth / 2\n             this.top = this.centerPos.y - newHeight / 2\n             this.height = newHeight\n             target.style.left = `${this.left}px`\n             target.style.top = `${this.top}px`\n             target.style.height = `${this.height}px`\n             this.pannelDom.style.left = `${this.left}px`\n             this.pannelDom.style.top = `${this.top}px`\n             this.pannelDom.style.height = `${this.height}px`\n           }\n           break;\n         case 8:\n           if (this.canChange) {\n             rotateCurrentPos = this.getRotatedPoint({\n               x: e.clientX,\n               y: e.clientY\n             }, this.leftMiddlePoint, -this.initAngle)\n             let rotatedRightMiddlePoint = {\n               x: rotateCurrentPos.x,\n               y: this.leftMiddlePoint.y\n             }\n             newWidth = rotatedRightMiddlePoint.x - this.leftMiddlePoint.x\n             if (newWidth <= 12) {\n               newWidth = 12\n               rotatedRightMiddlePoint.x = this.leftMiddlePoint.x + 12\n             }\n             this.rightMiddlePoint = this.getRotatedPoint(rotatedRightMiddlePoint, this.leftMiddlePoint, this.initAngle)\n             this.centerPos = {\n               x: Math.floor((this.leftMiddlePoint.x + this.rightMiddlePoint.x) / 2),\n               y: Math.floor((this.leftMiddlePoint.y + this.rightMiddlePoint.y) / 2)\n             }\n             this.left = this.centerPos.x - newWidth / 2\n             this.top = this.centerPos.y - target.offsetHeight / 2\n             this.width = newWidth\n             target.style.left = `${this.left}px`\n             target.style.top = `${this.top}px`\n             target.style.width = `${newWidth}px`\n             this.pannelDom.style.left = `${this.left}px`\n             this.pannelDom.style.top = `${this.top}px`\n             this.pannelDom.style.width = `${this.width}px`\n           }\n           break;\n         case 9:\n           if (this.canChange) {\n             let dis = {\n               x: Math.floor(e.clientX - this.mouseInit.x),\n               y: Math.floor(e.clientY - this.mouseInit.y)\n             }\n             this.left = this.initPosition.x + dis.x\n             this.top = this.initPosition.y + dis.y\n             target.style.left = `${this.left}px`\n             target.style.top = `${this.top}px`\n             this.pannelDom.style.left = `${this.left}px`\n             this.pannelDom.style.top = `${this.top}px`\n             this.pannelDom.style.width = `${this.width}px`\n             this.pannelDom.style.height = `${this.height}px`\n             this.centerPos = {\n               x: this.initCenterPos.x + dis.x,\n               y: this.initCenterPos.y + dis.y\n             }\n             if (this.showPosition) {\n               this.positionDom.style.display = 'inline-block'\n               this.positionDom.innerHTML = `X: ${this.left} Y: ${this.top}`\n             }\n           }\n           break;\n       }\n     }\n     moveLeave () {\n       if (this.canChange || this.rotateFlag) {\n         this.rotateFlag = false\n         this.canChange = false\n         if (this.angleDom) this.angleDom.style.display = 'none'\n         if (this.positionDom) this.positionDom.style.display = 'none'\n         this.getTransferPosition(this.left, this.top, this.width, this.height, this.angle, this.centerPos)\n       }\n     }\n     getRotate (target) {\n       var st = window.getComputedStyle(target, null);\n       var tr = st.getPropertyValue(\"-webkit-transform\") ||\n       st.getPropertyValue(\"-moz-transform\") ||\n       st.getPropertyValue(\"-ms-transform\") ||\n       st.getPropertyValue(\"-o-transform\") ||\n       st.getPropertyValue(\"transform\") || \"FAIL\";\n         // With rotate(30deg)...\n         // matrix(0.866025, 0.5, -0.5, 0.866025, 0px, 0px)\n       if (tr !== 'none') {\n         var values = tr.split('(')[1].split(')')[0].split(',');\n         var a = values[0];\n         var b = values[1];\n         var c = values[2];\n         var d = values[3];\n         var scale = Math.sqrt(a * a + b * b);\n         // arc sin, convert from radians to degrees, round\n         var sin = b / scale;\n         // next line works for 30deg but not 130deg (returns 50);\n         // var angle = Math.round(Math.asin(sin) * (180/Math.PI));\n         var angle = Math.round(Math.atan2(b, a) * (180 / Math.PI))\n         if (angle < 0) {\n           angle = 360 + angle\n         }\n         return angle\n       } else {\n         return 0\n       }\n     }\n     getRotatedPoint (curPos, centerPos, angle) {\n       return {\n         x: Math.floor((curPos.x - centerPos.x) * Math.cos(Math.PI / 180 * angle) - (curPos.y - centerPos.y) * Math.sin(Math.PI / 180 * angle) + centerPos.x),\n         y: Math.floor((curPos.x - centerPos.x) * Math.sin(Math.PI / 180 * angle) + (curPos.y - centerPos.y) * Math.cos(Math.PI / 180 * angle) + centerPos.y)                   \n       }\n     }\n     getTransferPosition (left, top, width, height, angle, center) {\n       // 计算变换后的方框四个角的位置\n       var a1 = {\n         x: left,\n         y: top\n       }\n       var a2 = {\n           x: left,\n           y: top + height\n       }\n       var a3 = {\n           x: left + width,\n           y: top\n       }\n       var a4 = {\n           x: left + width,\n           y: top + height\n       }\n       var a5 = {\n           x: left,\n           y: top + height / 2\n       }\n       var a6 = {\n           x: left + width,\n           y: top + height / 2\n       }\n       var a7 = {\n           x: left + width / 2,\n           y: top\n       }\n       var a8 = {\n           x: left + width / 2,\n           y: top + height\n       }\n       this.leftTopPoint = this.getRotatedPoint(a1, center, angle)\n       this.leftBottomPoint = this.getRotatedPoint(a2, center, angle)\n       this.rightTopPoint = this.getRotatedPoint(a3, center, angle)\n       this.rightBottomPoint = this.getRotatedPoint(a4, center, angle)\n       this.leftMiddlePoint = this.getRotatedPoint(a5, center, angle)\n       this.rightMiddlePoint = this.getRotatedPoint(a6, center, angle)\n       this.topMiddlePoint = this.getRotatedPoint(a7, center, angle)\n       this.bottomMiddlePoint = this.getRotatedPoint(a8, center, angle)\n     }\n   }\n   window.Drag = Drag;"]}