{"version":3,"sources":["plugin/go/draw/index.js"],"names":["init","go","content","selectToolbar","overview","window","goSamples","$","GraphObject","make","TopRotatingTool","RotatingTool","call","Diagram","inherit","prototype","updateAdornments","part","adornment","findAdornment","location","rotateObject","getDocumentPoint","Spot","rotate","newangle","myDiagram","grid","Panel","Shape","stroke","strokeWidth","interval","allowDrop","segmentIndex","cursor","desiredSize","Size","fill","rotatingTool","addDiagramListener","e","button","document","getElementById","disabled","isModified","idx","title","indexOf","substr","makePort","name","spot","output","input","alignment","alignmentFocus","portId","fromSpot","toSpot","fromLinkable","toLinkable","nodeSelectionAdornmentTemplate","Adornment","strokeDashArray","Placeholder","nodeResizeAdornmentTemplate","locationSpot","Right","TopLeft","Top","TopRight","Left","BottomLeft","Bottom","BottomRight","nodeRotateAdornmentTemplate","Center","locationObjectName","geometryString","isGeometryPositioned","nodeTemplate","Node","Binding","Point","parse","makeTwoWay","stringify","selectable","selectionAdornmentTemplate","resizable","resizeObjectName","resizeAdornmentTemplate","rotatable","rotateAdornmentTemplate","TextBlock","font","margin","maxSize","NaN","wrap","WrapFit","editable","mouseEnter","node","showSmallPorts","mouseLeave","selectionChanged","console","log","elt","click","obj","show","ports","each","port","linkSelectionAdornmentTemplate","isPanelMain","linkTemplate","Link","relinkableFrom","relinkableTo","reshapable","routing","AvoidsNodes","curve","JumpOver","corner","toShortLength","toArrow","ofObject","textAlign","minSize","myPalette","Palette","maxSelectionCount","nodeTemplateMap","model","GraphLinksModel","text","figure","points","List","addAll","myOverview","Overview","observed","myModel","Model","diagram","goDrow"],"mappings":"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","file":"draw.1839b528.js","sourceRoot":"..\\src","sourcesContent":["\r\n(function(){\r\n    function init (go,content,selectToolbar,overview) {\r\n        if (window.goSamples) goSamples();  // init for these samples -- you don't need to call this\r\n        var $ = go.GraphObject.make;  // for conciseness in defining templates\r\n        // return ;\r\n        function TopRotatingTool() {\r\n            go.RotatingTool.call(this);\r\n        }\r\n        go.Diagram.inherit(TopRotatingTool, go.RotatingTool);\r\n    \r\n        /** @override */\r\n        TopRotatingTool.prototype.updateAdornments = function (part) {\r\n            go.RotatingTool.prototype.updateAdornments.call(this, part);\r\n            var adornment = part.findAdornment(\"Rotating\");\r\n            if (adornment !== null) {\r\n                adornment.location = part.rotateObject.getDocumentPoint(new go.Spot(0.5, 0, 0, -30));  // above middle top\r\n            }\r\n        };\r\n    \r\n        /** @override */\r\n        TopRotatingTool.prototype.rotate = function (newangle) {\r\n            go.RotatingTool.prototype.rotate.call(this, newangle + 90);\r\n        };\r\n    \r\n    \r\n        var myDiagram =\r\n            $(go.Diagram, content,\r\n                  \r\n                {\r\n                    /**\r\n                     * 网格设置\r\n                    */\r\n                    grid: $(go.Panel, \"Grid\",\r\n                        $(go.Shape, \"LineH\", { stroke: \"lightgray\", strokeWidth: 0.5 }),\r\n                        $(go.Shape, \"LineH\", { stroke: \"gray\", strokeWidth: 0.5, interval: 10 }),\r\n                        $(go.Shape, \"LineV\", { stroke: \"lightgray\", strokeWidth: 0.5 }),\r\n                        $(go.Shape, \"LineV\", { stroke: \"gray\", strokeWidth: 0.5, interval: 10 })\r\n                    ),\r\n                    allowDrop: true,  // 允许从Palette往画板拖拽内容\r\n                    \"draggingTool.dragsLink\": true,//直线被拖入\r\n                    \"draggingTool.isGridSnapEnabled\": true,//启用网格捕获\r\n                    \"linkingTool.isUnconnectedLinkValid\": true, //从图形上点出的连接线是否允许连接单个图形\r\n                    \"linkingTool.portGravity\": 20,//从图形上点出的连接线的锚点的吸附范围\r\n                    \"relinkingTool.isUnconnectedLinkValid\": true,//工具栏的链接线是否允许连接单个图形\r\n                    \"relinkingTool.portGravity\": 20,//工具栏的链接线的锚点的吸附范围\r\n                    /**\r\n                     * 链接线的属性\r\n                    */\r\n                    \"relinkingTool.fromHandleArchetype\":\r\n                        $(go.Shape, \"Diamond\", { segmentIndex: 0, cursor: \"pointer\", desiredSize: new go.Size(8, 8), fill: \"tomato\", stroke: \"darkred\" }),\r\n                    \"relinkingTool.toHandleArchetype\":\r\n                        $(go.Shape, \"Diamond\", { segmentIndex: -1, cursor: \"pointer\", desiredSize: new go.Size(8, 8), fill: \"darkred\", stroke: \"tomato\" }),\r\n                    \"linkReshapingTool.handleArchetype\":\r\n                        $(go.Shape, \"Diamond\", { desiredSize: new go.Size(7, 7), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                    rotatingTool: $(TopRotatingTool),  // 旋转按钮\r\n                    \"rotatingTool.snapAngleMultiple\": 15, //？\r\n                    \"rotatingTool.snapAngleEpsilon\": 15,  //?\r\n                    \"undoManager.isEnabled\": true\r\n                });\r\n    \r\n        // when the document is modified, add a \"*\" to the title and enable the \"Save\" button\r\n        myDiagram.addDiagramListener(\"Modified\", function (e) {\r\n            var button = document.getElementById(\"SaveButton\");\r\n            if (button) button.disabled = !myDiagram.isModified;\r\n            var idx = document.title.indexOf(\"*\");\r\n            if (myDiagram.isModified) {\r\n                if (idx < 0) document.title += \"*\";\r\n            } else {\r\n                if (idx >= 0) document.title = document.title.substr(0, idx);\r\n            }\r\n        });\r\n    \r\n        function makePort(name, spot, output, input) {\r\n            \r\n            return $(go.Shape, \"Circle\",\r\n                {\r\n                    fill: null,  // not seen, by default; set to a translucent gray by showSmallPorts, defined below\r\n                    stroke: null,\r\n                    desiredSize: new go.Size(7, 7),\r\n                    alignment: spot,  // align the port on the main Shape\r\n                    alignmentFocus: spot,  // just inside the Shape\r\n                    portId: name,  // declare this object to be a \"port\"\r\n                    fromSpot: spot, toSpot: spot,  // declare where links may connect at this port\r\n                    fromLinkable: output, toLinkable: input,  // declare whether the user may draw links to/from here\r\n                    cursor: \"pointer\"  // show a different cursor to indicate potential link point\r\n                });\r\n        }\r\n    \r\n        var nodeSelectionAdornmentTemplate =\r\n            $(go.Adornment, \"Auto\",\r\n                $(go.Shape, { fill: null, stroke: \"deepskyblue\", strokeWidth: 1.5, strokeDashArray: [4, 2] }),\r\n                $(go.Placeholder)\r\n            );\r\n    \r\n        var nodeResizeAdornmentTemplate =\r\n            $(go.Adornment, \"Spot\",\r\n                { locationSpot: go.Spot.Right },\r\n                $(go.Placeholder),\r\n                $(go.Shape, { alignment: go.Spot.TopLeft, cursor: \"nw-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                $(go.Shape, { alignment: go.Spot.Top, cursor: \"n-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                $(go.Shape, { alignment: go.Spot.TopRight, cursor: \"ne-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n    \r\n                $(go.Shape, { alignment: go.Spot.Left, cursor: \"w-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                $(go.Shape, { alignment: go.Spot.Right, cursor: \"e-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n    \r\n                $(go.Shape, { alignment: go.Spot.BottomLeft, cursor: \"se-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                $(go.Shape, { alignment: go.Spot.Bottom, cursor: \"s-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                $(go.Shape, { alignment: go.Spot.BottomRight, cursor: \"sw-resize\", desiredSize: new go.Size(6, 6), fill: \"lightblue\", stroke: \"deepskyblue\" })\r\n            );\r\n    \r\n        var nodeRotateAdornmentTemplate =\r\n            $(go.Adornment,\r\n                { locationSpot: go.Spot.Center, locationObjectName: \"CIRCLE\" },\r\n                $(go.Shape, \"Circle\", { name: \"CIRCLE\", cursor: \"pointer\", desiredSize: new go.Size(7, 7), fill: \"lightblue\", stroke: \"deepskyblue\" }),\r\n                $(go.Shape, { geometryString: \"M3.5 7 L3.5 30\", isGeometryPositioned: true, stroke: \"deepskyblue\", strokeWidth: 1.5, strokeDashArray: [4, 2] })\r\n            );\r\n    \r\n        myDiagram.nodeTemplate =\r\n            $(go.Node, \"Spot\",\r\n                { locationSpot: go.Spot.Center },\r\n                new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                { selectable: true, selectionAdornmentTemplate: nodeSelectionAdornmentTemplate },\r\n                { resizable: true, resizeObjectName: \"PANEL\", resizeAdornmentTemplate: nodeResizeAdornmentTemplate },\r\n                { rotatable: true, rotateAdornmentTemplate: nodeRotateAdornmentTemplate },\r\n                new go.Binding(\"angle\").makeTwoWay(),\r\n                // the main object is a Panel that surrounds a TextBlock with a Shape\r\n                $(go.Panel, \"Auto\",\r\n                    { name: \"PANEL\" },\r\n                    new go.Binding(\"desiredSize\", \"size\", go.Size.parse).makeTwoWay(go.Size.stringify),\r\n                    $(go.Shape, \"Rectangle\",  // default figure\r\n                        {\r\n                            portId: \"\", // the default port: if no spot on link data, use closest side\r\n                            fromLinkable: true, toLinkable: true, cursor: \"pointer\",\r\n                            fill: \"white\",  // default color\r\n                            strokeWidth: 2\r\n                        },\r\n                        new go.Binding(\"figure\"),\r\n                        new go.Binding(\"fill\")),\r\n                    $(go.TextBlock,\r\n                        {\r\n                            font: \"bold 11pt Helvetica, Arial, sans-serif\",\r\n                            margin: 8,\r\n                            maxSize: new go.Size(160, NaN),\r\n                            wrap: go.TextBlock.WrapFit,\r\n                            editable: true\r\n                        },\r\n                        new go.Binding(\"text\").makeTwoWay())\r\n                ),\r\n                // four small named ports, one on each side:\r\n                makePort(\"T\", go.Spot.Top, false, true),\r\n                makePort(\"L\", go.Spot.Left, true, true),\r\n                makePort(\"R\", go.Spot.Right, true, true),\r\n                makePort(\"B\", go.Spot.Bottom, true, false),\r\n                { // 鼠标事假\r\n                    mouseEnter: function (e, node) { showSmallPorts(node, true); },\r\n                    mouseLeave: function (e, node) { showSmallPorts(node, false); },\r\n                    selectionChanged: function (part) {\r\n                        console.log(part.elt(0),\"oooooooo\")\r\n                    },\r\n                    click: function (e, obj) { \r\n                        console.log(e,\"++++++++++\",obj);\r\n                    },\r\n                }\r\n            );\r\n    \r\n        function showSmallPorts(node, show) {\r\n            node.ports.each(function (port) {\r\n                if (port.portId !== \"\") {  // don't change the default port, which is the big shape\r\n                    port.fill = show ? \"rgba(0,0,0,.3)\" : null;\r\n                }\r\n            });\r\n        }\r\n    \r\n        var linkSelectionAdornmentTemplate =\r\n            $(go.Adornment, \"Link\",\r\n                $(go.Shape,\r\n                    // isPanelMain declares that this Shape shares the Link.geometry\r\n                    { isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0 })  // use selection object's strokeWidth\r\n            );\r\n    \r\n        myDiagram.linkTemplate =\r\n            $(go.Link,  // the whole link panel\r\n                { selectable: true, selectionAdornmentTemplate: linkSelectionAdornmentTemplate },\r\n                { relinkableFrom: true, relinkableTo: true, reshapable: true },\r\n                {\r\n                    routing: go.Link.AvoidsNodes,\r\n                    curve: go.Link.JumpOver,\r\n                    corner: 5,\r\n                    toShortLength: 4\r\n                },\r\n                new go.Binding(\"points\").makeTwoWay(),\r\n                $(go.Shape,  // the link path shape\r\n                    { isPanelMain: true, strokeWidth: 2 }),\r\n                $(go.Shape,  // the arrowhead\r\n                    { toArrow: \"Standard\", stroke: null }),\r\n                $(go.Panel, \"Auto\",\r\n                    new go.Binding(\"visible\", \"isSelected\").ofObject(),\r\n                    $(go.Shape, \"RoundedRectangle\",  // the link shape\r\n                        { fill: \"#F8F8F8\", stroke: null }),\r\n                    $(go.TextBlock,\r\n                        {\r\n                            textAlign: \"center\",\r\n                            font: \"10pt helvetica, arial, sans-serif\",\r\n                            stroke: \"#919191\",\r\n                            margin: 2,\r\n                            minSize: new go.Size(10, NaN),\r\n                            editable: true\r\n                        },\r\n                        new go.Binding(\"text\").makeTwoWay())\r\n                ),\r\n                {\r\n                    click: function (e, obj) {\r\n                        console.log(e, \"------\", obj);\r\n                    },\r\n                }\r\n            );\r\n    \r\n    \r\n        // initialize the Palette that is on the left side of the page\r\n        var myPalette =\r\n            $(go.Palette, selectToolbar,  // must name or refer to the DIV HTML element\r\n                {\r\n                    maxSelectionCount: 1,\r\n                    nodeTemplateMap: myDiagram.nodeTemplateMap,  // share the templates used by myDiagram\r\n                    linkTemplate: // simplify the link template, just in this Palette\r\n                        $(go.Link,\r\n                            { // because the GridLayout.alignment is Location and the nodes have locationSpot == Spot.Center,\r\n                                // to line up the Link in the same manner we have to pretend the Link has the same location spot\r\n                                locationSpot: go.Spot.Center,\r\n                                selectionAdornmentTemplate:\r\n                                    $(go.Adornment, \"Link\",\r\n                                        { locationSpot: go.Spot.Center },\r\n                                        $(go.Shape,\r\n                                            { isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0 }),\r\n                                        $(go.Shape,  // the arrowhead\r\n                                            { toArrow: \"Standard\", stroke: null })\r\n                                    )\r\n                            },\r\n                            {\r\n                                routing: go.Link.AvoidsNodes,//绕行节点\r\n                                curve: go.Link.JumpOver,\r\n                                corner: 5,\r\n                                toShortLength: 4\r\n                            },\r\n                            /*{\r\n                                routing: go.Link.AvoidsNodes,//绕行节点\r\n                                curve: go.Link.Bezier ,\r\n                                corner: 5,\r\n                                toShortLength: 4\r\n                            },*/\r\n                            new go.Binding(\"points\"),\r\n                            $(go.Shape,  // the link path shape\r\n                                { isPanelMain: true, strokeWidth: 2 }),\r\n                            $(go.Shape,  // the arrowhead\r\n                                { toArrow: \"Standard\", stroke: null })\r\n                        ),\r\n                    model: new go.GraphLinksModel([  // specify the contents of the Palette\r\n                        { text: \"创建节点\" },\r\n                        { text: \"普通节点\" },\r\n                        { text: \"归档节点\" },\r\n                        { text: \"分支\", figure: \"Diamond\", fill: \"lightskyblue\" },\r\n                        { text: \"合并\", figure: \"RoundedRectangle\", fill: \"lightyellow\",name:'name' }\r\n                    ], [\r\n                        { points: new go.List(go.Point).addAll([new go.Point(0, 0), new go.Point(30, 0), new go.Point(30, 40), new go.Point(60, 40)]) },\r\n                        ],\r\n                    )\r\n                });\r\n        var myOverview =\r\n            $(go.Overview, overview, { observed: myDiagram });\r\n        var myModel = $(go.Model);\r\n    \r\n        return {diagram:myDiagram,model:myModel};\r\n        \r\n    }\r\n    window.goDrow = init;\r\n})()\r\n\r\n\r\n\r\n\r\n// end of TopRotatingTool class\r\n\r\n\r\n// Show the diagram's model in JSON format that the user may edit\r\n\r\n"]}